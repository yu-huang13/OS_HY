lab1-ex0.s：
输出字符串hello world

linux系统调用的编写和含义：
在lab1-ex0.s中，通过将参数传入eax、ebx、ecx、edx寄存器，最后使用int	$0x80 命令进行系统调用
系统调用：操作系统向应用程序提供了接口，使得应用程序能够调用操作系统提供的服务，在lab1-ex0.s中，使用了linux的输出服务

objdump：
对生成的可执行文件进行反汇编，生成汇编代码。可以看到lab1-0x0.out进行系统调用的复杂过程。

nm：
输出可执行文件的符号信息，符号信息可以是函数名、变量名等。以下为执行nm lab1-ex0.out的部分输出：
00000002 a AF_INET
0804a040 B __bss_start
0804a040 b completed.7181
0804a014 D __data_start
0804a014 W data_start
08048330 t deregister_tm_clones
080483a0 t __do_global_dtors_aux
08049f0c t __do_global_dtors_aux_fini_array_entry
0804a018 D __dso_handle
08049f14 d _DYNAMIC
0804a040 D _edata
0804a044 B _end


file:
识别文件类型以及编码格式
例如：
file lab1-ex0.s
lab1-ex0.s: assembler source, ASCII text 得到lab1-ex0.s的文件类型为汇编代码，编码方式为ascii
再例如：
file lab1-ex0.out
lab1-ex0.out: ELF 32-bit LSB executable, Intel 80386, version 1 (SYSV), dynamically linked, interpreter /lib/ld-linux.so.2, for GNU/Linux 2.6.32, BuildID[sha1]=5b20e6a04020d11c4d1c08bac3127a8e0552271f, not stripped 可知lab1-ex0.out为32位可执行程序，使用动态链接等信息。

Linux应用的系统调用执行过程:
明了strace的大致用途，说明了系统调用的具体执行过程（包括应用，CPU硬件，操作系统的执行过程）:
strace的大致用途：
strace可以跟踪到一个进程产生的系统调用,包括参数，返回值，执行消耗的时间。

系统调用的执行过程：
strace -c ./lab1-ex1.out输出如下：
% time     seconds  usecs/call     calls    errors syscall
------ ----------- ----------- --------- --------- ----------------
  0.00    0.000000           0         1           read
  0.00    0.000000           0         1           write
  0.00    0.000000           0         2           open
  0.00    0.000000           0         2           close
  0.00    0.000000           0         3           fstat
  0.00    0.000000           0         9           mmap
  0.00    0.000000           0         4           mprotect
  0.00    0.000000           0         1           munmap
  0.00    0.000000           0         1           brk
  0.00    0.000000           0         3         3 access
  0.00    0.000000           0         1           execve
  0.00    0.000000           0         1           arch_prctl
------ ----------- ----------- --------- --------- ----------------
100.00    0.000000                    29         3 total
可以看到每次系统调用的时间几乎为0，总执行时间几乎为0，共进行了29次系统调用，其中access系统调用出错了3次。若使用strace -C ./lab1-ex1.out 则将看到详细的调用过程：
从execve开始执行程序，brk分配内存，access检查/etc/ld.so.nohwcap是否存在、/etc/ld.so.preload文件可读，mmap将文件映射到内存，，arch_prctl设置进程状态，mprotect设置内存访问权限，munmap解除映射，fstat获取文件信息，write执行输出字符串，exut_group(12)退出程序，执行完毕。

more /proc/interrupts则显示调用信息，部分输出如下：
[1] 15033
            CPU0       CPU1       
   0:         27          0   IO-APIC    2-edge      timer
   1:       4327       7472   IO-APIC    1-edge      i8042
   4:       3586       6058   IO-APIC    4-edge    
   8:          1          0   IO-APIC    8-edge      rtc0
   9:          0          0   IO-APIC    9-fasteoi   acpi
  12:      46297      95597   IO-APIC   12-edge      i8042
  14:          0          0   IO-APIC   14-edge      ata_piix
  15:          0          0   IO-APIC   15-edge      ata_piix
  16:       1110        400   IO-APIC   16-fasteoi   vmwgfx, snd_ens1371
  17:      44687      16148   IO-APIC   17-fasteoi   ehci_hcd:usb1, ioc0
  18:        168          0   IO-APIC   18-fasteoi   uhci_hcd:usb2
  19:         81      52567   IO-APIC   19-fasteoi   eno16777736
  24:          0          0   PCI-MSI 344064-edge      PCIe PME, pciehp
显示irq序号，在CPU0中断的次数，在CPU1中断的次数，中断控制器，设备名称等信息。















